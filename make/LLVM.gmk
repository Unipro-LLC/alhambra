LLVM_BUILD_ROOT_DIR ?= $(shell cd $(BUILD_OUTPUT)/.. && pwd)
LLVM_BUILD_DIR = $(LLVM_BUILD_ROOT_DIR)/llvm-$(LLVM_ARCH)

ifeq ($(DEBUG_LEVEL),slowdebug)
    BUILD_MODE = debug
endif
ifeq ($(DEBUG_LEVEL),fastdebug)
    BUILD_MODE = debug
endif

$(shell [ -d "$(LLVM_BUILD_DIR)" ] || mkdir -p $(LLVM_BUILD_DIR))

BUILD_MODE ?= release

LLVM_NATIVE_BUILD_DIR = $(LLVM_BUILD_DIR)
LLVM_X86_BUILD_DIR    = $(LLVM_BUILD_DIR)

OPCODES_GEN_BUILD_DIR = $(LLVM_BUILD_DIR)/llvm_opcodes_gen
LLVM_SRC_DIR = $(SRC_ROOT)/llvm-project/llvm
CMAKE_VERBOSE_MAKEFILE ?= OFF

LLVM_COMMON_CONFIGURE_OPTIONS=-DRVM_PATH=$(SRC_ROOT) -DLLVM_INCLUDE_TESTS=OFF -DLLVM_INCLUDE_TOOLS=OFF -DLLVM_INCLUDE_EXAMPLES=OFF -DLLVM_ENABLE_WARNINGS=OFF
CMAKE_COMMON_CONFIGURE_OPTIONS=-DCMAKE_VERBOSE_MAKEFILE=$(CMAKE_VERBOSE_MAKEFILE)

X86_LIGHT_MAGIC_STRING = $(LLVM_COMMON_CONFIGURE_OPTIONS) $(CMAKE_COMMON_CONFIGURE_OPTIONS)
X86_LIGHT_MAGIC_STRING += -DCMAKE_C_COMPILER="$(BUILD_CC)" 
X86_LIGHT_MAGIC_STRING += -DCMAKE_CXX_COMPILER="$(BUILD_CXX)"
X86_LIGHT_MAGIC_STRING += -DCMAKE_CXX_FLAGS="-std=c++0x"
X86_LIGHT_MAGIC_STRING += -DLLVM_EXPERIMENTAL_TARGETS_TO_BUILD=X86 -DLLVM_TARGETS_TO_BUILD="X86" -DCMAKE_BUILD_TYPE=$(BUILD_MODE)
X86_LIGHT_MAGIC_STRING += -DHAVE_XDOT_PY=1 -DLLVM_PATH_XDOT_PY=/usr/bin/xdot

llvm: llvm_$(LLVM_ARCH)_prepare llvm_$(LLVM_ARCH)

llvm_prepare: llvm_$(LLVM_ARCH)_cmake

llvm_clean: llvm_clean_build_dir
clean-llvm: llvm_clean

llvm_clean_build_dir:
	rm -rf $(LLVM_BUILD_DIR)

# x86
llvm_x86_prepare:
	$(QUIETLY) mkdir -p $(LLVM_X86_BUILD_DIR)

llvm_x86 : llvm_x86_tblgen
	$(MAKE) -C $(LLVM_X86_BUILD_DIR)

llvm_x86_cmake :
	cd $(LLVM_X86_BUILD_DIR); cmake $(LLVM_SRC_DIR) $(X86_LIGHT_MAGIC_STRING)

llvm_x86_tblgen : llvm_x86_cmake
	$(MAKE) -C $(LLVM_X86_BUILD_DIR) llvm-tblgen

.PHONY : llvm_$(LLVM_ARCH)_prepare

